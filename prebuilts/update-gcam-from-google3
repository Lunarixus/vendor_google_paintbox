#!/bin/bash
#
# Copyright 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Update the gcam libraries from google3
#

set -o errexit

usage() {
cat << EOF
  Usage:
  $0 [--google3 {google3-path}] [--prod] [--nopcg]
    --google3 {google3-path}  Local google3 workspace path
    --prod                    Build gcam with prod=1
    --nopcg                   Skip PCG generation
EOF
}

google3=""
prod=""
nopcg=false
while [ $# -gt 0 ]; do
  arg="$1"
  shift
  case "$arg" in
    "-h")
      usage
      exit 0
      ;;
    "--google3")
      arg="$1"
      shift
      google3="$arg"
      ;;
    "--prod")
      prod=" --define prod=1 "
      ;;
    "--nopcg")
      nopcg=true
      ;;
    *)
      usage
      exit 0
      ;;
  esac
done

######################################################################
# Setup paths

GOOGLE3_PATH="${google3}"

GOOGLE3_HARDWARE="hardware"
GOOGLE3_GOOGLEX="googlex"
GOOGLE3_GCAM_PATH="hardware/gchips/paintbox/googlex/gcam/hdrplus"
GOOGLE3_SYSTEM_PATH="hardware/gchips/paintbox/system/easel"

GOOGLE3_GCAM_OUT="blaze-bin/${GOOGLE3_GCAM_PATH}"
GOOGLE3_SYSTEM_OUT="blaze-bin/${GOOGLE3_SYSTEM_PATH}"
GOOGLE3_GCAM_TARGET="libgcam-package"
GOOGLE3_GCAM_OUT_TGZ="libgcam.tgz"
GOOGLE3_SYSTEM_TARGET="libeaselsystem.so"
GOOGLE3_SYSTEM_OUT_SO="${GOOGLE3_SYSTEM_TARGET}"
GOOGLE3_HALIDE_RUNTIME_H="third_party/halide/HalideRuntime.h"
GOOGLE3_HALIDE_BUFFER_H="third_party/halide/HalideBuffer.h"
GOOGLE3_IMX_OUT="hardware/gchips/paintbox/prebuilts/lib/arm64-v8a/libimageprocessor.so"
GOOGLE3_IMX_H="third_party/halide/paintbox/src/runtime/imx.h"
GOOGLE3_SYSTEM_INCLUDE="hardware/gchips/paintbox/system/include"
GOOGLE3_PCG_GEN_SH="hardware/gchips/paintbox/scripts/generate_all_pbserver_pcgs.sh"

ANDROID_PREBUILT_PATH="vendor/google_paintbox/prebuilts/"
ANDROID_LIB_PATH="${ANDROID_PREBUILT_PATH%%/}/libs"
ANDROID_INC_PATH="${ANDROID_LIB_PATH%%/}/include"
ANDROID_PCG_PATH="${ANDROID_PREBUILT_PATH%%/}/compiled_graph"

GOOGLE3_GCAM_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_GCAM_PATH}"
GOOGLE3_SYSTEM_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_SYSTEM_PATH}"
GOOGLE3_GCAM_TARGET_FULL_PATH="${GOOGLE3_GCAM_PATH%%/}:${GOOGLE3_GCAM_TARGET}"
GOOGLE3_SYSTEM_TARGET_FULL_PATH="${GOOGLE3_SYSTEM_PATH%%/}:${GOOGLE3_SYSTEM_TARGET}"
GOOGLE3_GCAM_OUT_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_GCAM_OUT}"
GOOGLE3_GCAM_OUT_TGZ_FULL="${GOOGLE3_GCAM_OUT_FULL_PATH%%/}/${GOOGLE3_GCAM_OUT_TGZ}"
GOOGLE3_SYSTEM_OUT_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_SYSTEM_OUT}"
GOOGLE3_SYSTEM_OUT_SO_FULL="${GOOGLE3_SYSTEM_OUT_FULL_PATH%%/}/${GOOGLE3_SYSTEM_OUT_SO}"
GOOGLE3_HALIDE_RUNTIME_H_FULL_PATH="${GOOGLE3_PATH%%/}/blaze-genfiles/third_party/halide/halide_runtime_headers/${GOOGLE3_HALIDE_RUNTIME_H}"
GOOGLE3_HALIDE_BUFFER_H_FULL_PATH="${GOOGLE3_PATH%%/}/blaze-genfiles/third_party/halide/halide_runtime_headers/${GOOGLE3_HALIDE_BUFFER_H}"
GOOGLE3_IMX_OUT_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_IMX_OUT}"
GOOGLE3_IMX_H_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_IMX_H}"
GOOGLE3_SYSTEM_INCLUDE_FULL_PATH="${GOOGLE3_PATH%%/}/${GOOGLE3_SYSTEM_INCLUDE}"

ANDROID_PREBUILT_FULL_PATH="${ANDROID_BUILD_TOP%%/}/${ANDROID_PREBUILT_PATH}"
ANDROID_LIB_FULL_PATH="${ANDROID_BUILD_TOP%%/}/${ANDROID_LIB_PATH}"
ANDROID_INC_FULL_PATH="${ANDROID_BUILD_TOP%%/}/${ANDROID_INC_PATH}"
ANDROID_GCAM_LIB_FULL_PATH="${ANDROID_LIB_FULL_PATH%%/}/libgcam.so"
ANDROID_HALIDE_RUNTIME_H="${ANDROID_INC_FULL_PATH%%/}/${GOOGLE3_HALIDE_RUNTIME_H}"
ANDROID_HALIDE_BUFFER_H="${ANDROID_INC_FULL_PATH%%/}/${GOOGLE3_HALIDE_BUFFER_H}"
ANDROID_IMX_OUT_FULL_PATH="${ANDROID_LIB_FULL_PATH%%/}/libimageprocessor.so"
ANDROID_IMX_H_FULL_PATH="${ANDROID_INC_FULL_PATH%%/}/${GOOGLE3_IMX_H}"
ANDROID_SYSTEM_OUT_FULL_PATH="${ANDROID_LIB_FULL_PATH%%/}/libeaselsystem.so"
ANDROID_SYSTEM_INCLUDE_FULL_PATH="${ANDROID_INC_FULL_PATH%%/}/${GOOGLE3_SYSTEM_INCLUDE}"

ANDROID_PCG_FULL_PATH="${ANDROID_BUILD_TOP%%/}/${ANDROID_PCG_PATH}/pcg.tar"
TMP_PCG_FULL_PATH="/tmp/pcg"

######################################################################
# Verify paths

# Verify environment
if prodcertstatus -q; then true
else
  echo "No valid prodaccess cert!"
  return 1
fi
if [ -z "${ANDROID_BUILD_TOP}" ]; then
  echo "No Android path found. Run envsetup"
  return 1
fi

# Verify gcam paths
if [ ! -d "${GOOGLE3_GCAM_FULL_PATH}" ]; then
  echo "${GOOGLE3_GCAM_FULL_PATH} does not exist!"
  return 1
fi
if [ ! -r "${GOOGLE3_GCAM_FULL_PATH}/BUILD" ]; then
  echo "${GOOGLE3_GCAM_FULL_PATH} does not contain a readable BUILD file. Wrong path?"
  return 1
fi
if grep -q gcam "${GOOGLE3_GCAM_FULL_PATH}/BUILD"; then true
else
  echo "${GOOGLE3_GCAM_FULL_PATH}/BUILD does not mention gcam. Wrong path?"
  return 1
fi

######################################################################
# Build libgcam target on google3

echo -e "\e[1;34m** Building libgcam library\e[00m"

pushd ${GOOGLE3_PATH}

# Generate PCG
if [ "${nopcg}" = false ]; then
  rm -rf ${TMP_PCG_FULL_PATH}
  GLOG_v=-2 ${GOOGLE3_PCG_GEN_SH} --pcg_output_dir=${TMP_PCG_FULL_PATH}
  if [ $? -ne 0 ]; then
    echo "Error: ${GOOGLE3_PCG_GEN_SH} returned non-zero"
    exit 1
  fi
fi

# Build libgcam
blaze build $prod \
  --define easel=1 \
  --define ipuonly=1 \
  --config=android_arm64 \
  -c opt ${GOOGLE3_GCAM_TARGET_FULL_PATH}
if [ $? -ne 0 ]; then
  echo "** Blaze opt build failure, cancelling update **"
  popd
  return 1
fi
if [ ! -r "${GOOGLE3_GCAM_OUT_TGZ_FULL}" ]; then
  echo "Can't find ${GOOGLE3_GCAM_OUT_TGZ_FULL} after build!"
  popd
  return 1
fi

#Build libeaselsystem
blaze build --config=android_arm64 -c opt ${GOOGLE3_SYSTEM_TARGET_FULL_PATH}

pwd
pwd
pwd
ls -l ${GOOGLE3_GCAM_OUT_TGZ_FULL}


# Stash the library and headers into tmp before we clean the build
gcam_tmp_lib="$(mktemp -d)"

cp "${GOOGLE3_GCAM_OUT_TGZ_FULL}" "${gcam_tmp_lib}/"

pushd ${gcam_tmp_lib}
tar xzf ${GOOGLE3_GCAM_OUT_TGZ}
popd

popd

# Unzip and Copy build results and place in Android tree
echo -e "\e[1;34m** Copying build results to Android tree\e[00m"
cp -f "${gcam_tmp_lib}/libgcam.so" "${ANDROID_GCAM_LIB_FULL_PATH}"

rm -rf "${ANDROID_INC_FULL_PATH}/"
mkdir -p "${ANDROID_INC_FULL_PATH}"
cp -rf "${gcam_tmp_lib}/${GOOGLE3_HARDWARE}" "${ANDROID_INC_FULL_PATH}/"
cp -rf "${gcam_tmp_lib}/${GOOGLE3_GOOGLEX}" "${ANDROID_INC_FULL_PATH}/"

[[ -f "$gcam_tmp_lib" ]] && rm -f "$gcam_tmp_lib"

# Copy Halide headers.
mkdir -p `dirname ${ANDROID_HALIDE_RUNTIME_H}`
cp ${GOOGLE3_HALIDE_RUNTIME_H_FULL_PATH} ${ANDROID_HALIDE_RUNTIME_H}
mkdir -p `dirname ${ANDROID_HALIDE_BUFFER_H}`
cp ${GOOGLE3_HALIDE_BUFFER_H_FULL_PATH} ${ANDROID_HALIDE_BUFFER_H}

# Copy libeaselsystem
cp -f ${GOOGLE3_SYSTEM_OUT_SO_FULL} ${ANDROID_SYSTEM_OUT_FULL_PATH}
mkdir -p ${ANDROID_SYSTEM_INCLUDE_FULL_PATH}
cp -rf ${GOOGLE3_SYSTEM_INCLUDE_FULL_PATH}/*.h ${ANDROID_SYSTEM_INCLUDE_FULL_PATH}


# Copy Imx lib
cp ${GOOGLE3_IMX_OUT_FULL_PATH} ${ANDROID_IMX_OUT_FULL_PATH}
mkdir -p `dirname ${ANDROID_IMX_H_FULL_PATH}`
cp ${GOOGLE3_IMX_H_FULL_PATH} ${ANDROID_IMX_H_FULL_PATH}

# Copy PCG
if [ "${nopcg}" = false ]; then
  mkdir -p `dirname ${ANDROID_PCG_FULL_PATH}`
  rm -f ${ANDROID_PCG_FULL_PATH}
  tar -cf ${ANDROID_PCG_FULL_PATH} -C ${TMP_PCG_FULL_PATH}/*
fi
######################################################################
# All done.
