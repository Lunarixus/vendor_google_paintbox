#ifndef GOOGLEX_GCAM_GCAM_SRC_LIB_GCAM_DEBUG_PARAMS_H_
#define GOOGLEX_GCAM_GCAM_SRC_LIB_GCAM_DEBUG_PARAMS_H_

// This header is part of the public Gcam API; try not to include any headers
// unnecessarily, since any included headers also become part of the API.

#include <cstdint>

namespace gcam {

// Flags for saving intermediate image results, used to construct
// DebugParams::save_bitmask.
static const uint32_t GCAM_SAVE_NONE                    = 0u;
static const uint32_t GCAM_SAVE_BASE                    = (1u << 0);
static const uint32_t GCAM_SAVE_MERGED                  = (1u << 1);
static const uint32_t GCAM_SAVE_HEAT                    = (1u << 2);
static const uint32_t GCAM_SAVE_MERGE_DETAILS           = (1u << 3);
static const uint32_t GCAM_SAVE_ALIGNMENTS              = (1u << 4);
static const uint32_t GCAM_SAVE_HDR_SYNTHETIC_SHORT_EXP = (1u << 5);
static const uint32_t GCAM_SAVE_HDR_SYNTHETIC_LONG_EXP  = (1u << 6);
static const uint32_t GCAM_SAVE_HDR_FUSED               = (1u << 7);
static const uint32_t GCAM_SAVE_HDR_HEAT_BEFORE         = (1u << 8);
static const uint32_t GCAM_SAVE_HDR_HEAT_AFTER          = (1u << 9);
static const uint32_t GCAM_SAVE_DGAIN_WB                = (1u << 10);
static const uint32_t GCAM_SAVE_DENOISED                = (1u << 11);
static const uint32_t GCAM_SAVE_TONEMAPPED              = (1u << 12);
static const uint32_t GCAM_SAVE_DEHAZED                 = (1u << 13);
static const uint32_t GCAM_SAVE_SHARPENED               = (1u << 14);
static const uint32_t GCAM_SAVE_CROPPED                 = (1u << 15);
static const uint32_t GCAM_SAVE_COLOR_SAT_VIB           = (1u << 16);
static const uint32_t GCAM_SAVE_POSTVIEW                = (1u << 17);
static const uint32_t GCAM_SAVE_INPUT_METERING          = (1u << 18);
static const uint32_t GCAM_SAVE_INPUT_PAYLOAD           = (1u << 19);
static const uint32_t GCAM_SAVE_INPUT =
    GCAM_SAVE_INPUT_METERING | GCAM_SAVE_INPUT_PAYLOAD;
static const uint32_t GCAM_SAVE_LOW_FREQ_COLOR_XFER     = (1u << 20);
static const uint32_t GCAM_SAVE_FINAL_GAMMA             = (1u << 21);
static const uint32_t GCAM_SAVE_BASE_DESTRIPE           = (1u << 22);
static const uint32_t GCAM_SAVE_AE                      = (1u << 23);
// ...add more here...
static const uint32_t GCAM_SAVE_TEXT                    = (1u << 29);
static const uint32_t GCAM_SAVE_COMPARISON_IMAGE        = (1u << 30);
static const uint32_t GCAM_SAVE_FINAL_OUTPUT            = (1u << 31);
static const uint32_t GCAM_SAVE_ALL_PLUS_INPUT          = 0xFFFFFFFF;
static const uint32_t GCAM_SAVE_ALL_MINUS_INPUT =
    GCAM_SAVE_ALL_PLUS_INPUT ^ GCAM_SAVE_INPUT;

// Debugging options, including what debugging information gets saved to disk.
// These parameters are configured at Gcam startup, and are normally fixed.
// However, they can be overridden, per-shot, for tools that reprocess bursts
// from various devices, or with varying settings.
struct DebugParams {
  void Print() const;

  // Bitmask describing what debugging information and intermediate images
  // to save to disk, generated by or'ing GCAM_SAVE_* flags together.
  uint32_t save_bitmask = 0;
};

}  // namespace gcam

#endif  // GOOGLEX_GCAM_GCAM_SRC_LIB_GCAM_DEBUG_PARAMS_H_
